import { jsx as _jsx, jsxs as _jsxs } from "@tempots/dom/jsx-runtime";
import { For } from '@tempots/dom';
import { strictEqual } from '@tempots/std/equals';
import { Box } from '../Box/Box';
import { Control } from '../Control/Control';
import { Sx } from '../styling/Sx';
function Segment({ value, display, selected, onChange }) {
    return (_jsx(Box, { children: _jsxs("button", { onClick: () => { onChange(value.get()); }, disabled: selected, children: [_jsx(Sx, { sx: { display: 'inline', fontWeight: selected.map(v => v ? 'bold' : 'normal') } }), value.map(display)] }) }));
}
export function SegmentedControl(props) {
    const options = props.options;
    const equality = props.equality ?? strictEqual;
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    const onChange = props.onChange ?? (() => { });
    return (_jsx(Control, { children: _jsx(For, { of: options, children: (option) => _jsx(Segment, { value: option, display: props.display ?? String, selected: option.combine(props.value, equality), onChange: onChange }) }) }));
}
