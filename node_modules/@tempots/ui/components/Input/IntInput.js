import { jsx as _jsx } from "@tempots/dom/jsx-runtime";
import { Signal } from '@tempots/dom';
import { Control } from '../Control/Control';
import { BaseInput } from './BaseInput';
export const IntInput = ({ value, onChange, max, min }) => {
    return (_jsx(Control, { children: _jsx(BaseIntInput, { value: value, onChange: onChange, max: max, min: min }) }));
};
export const BaseIntInput = ({ value, onChange, max, min }) => {
    const minSignal = (min ?? Signal.of(null));
    const maxSignal = (max ?? Signal.of(null));
    return (_jsx(BaseInput, { type: "number", min: min, max: max, step: Signal.of(1), value: Signal.combine([value, minSignal, maxSignal], (v, mi, ma) => {
            if (mi !== null && v < mi) {
                return mi;
            }
            if (ma !== null && v > ma) {
                return ma;
            }
            return v;
        }).map(String), onChange: (value) => {
            const newValue = Math.round(Number(value));
            if (isFinite(newValue)) {
                onChange(Math.round(newValue));
            }
        } }));
};
