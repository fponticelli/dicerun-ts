import { jsx as _jsx, jsxs as _jsxs } from "@tempots/dom/jsx-runtime";
import { For } from '@tempots/dom';
import { strictEqual } from '@tempots/std/equals';
import { Control } from '../Control/Control';
import { Spacing } from '../styling/Spacing';
import { Sx } from '../styling/Sx';
export function NativeSelect({ value, onChange, options, display, equality, disabled }) {
    return (_jsx(Control, { children: _jsx(BaseNativeSelect, { value: value, onChange: onChange, options: options, display: display, equality: equality, disabled: disabled }) }));
}
export function BaseNativeSelect(props) {
    const options = props.options;
    const equality = props.equality ?? strictEqual;
    const display = props.display ?? String;
    const disabled = props.disabled ?? (() => false);
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    const onChange = props.onChange ?? (() => { });
    return (_jsxs("select", { onChange: e => {
            const target = e.target;
            const index = Number(target.value);
            onChange(options.get()[index]);
        }, children: [_jsx(Sx, { sx: {
                    ':focus': {
                        outline: 'none',
                        background: 'rgba(10%, 10%, 100%, 0.2)' // TODO
                    }
                } }), _jsx(Spacing, { ph: 8 }), _jsx(For, { of: options, children: (option, index) => (_jsx("option", { disabled: option.map(disabled), selected: option.combine(props.value, equality), value: String(index), children: option.map(display) })) })] }));
}
