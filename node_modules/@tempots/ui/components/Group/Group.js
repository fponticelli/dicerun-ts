import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "@tempots/dom/jsx-runtime";
import { Consumer, Signal } from '@tempots/dom';
import { StyleMarker } from '../StyleProvider/StyleProvider';
import { Sx } from '../styling/Sx';
export const Group = (props) => {
    const { children, align, grow, noWrap, position, spacing } = props;
    return (_jsx(Consumer, { mark: StyleMarker, children: ({ styles }) => {
            return (_jsxs("div", { children: [_jsx(Sx, { sx: {
                            display: 'flex',
                            flexDirection: 'row',
                            alignItems: align,
                            flexWrap: (noWrap ?? Signal.of(false)).map(v => v ? 'nowrap' : 'wrap'),
                            justifyContent: position?.map(v => {
                                switch (v) {
                                    case 'left': return 'flex-start';
                                    case 'right': return 'flex-end';
                                    case 'center': return 'center';
                                    case 'apart': return 'space-between';
                                    default: return 'flex-start';
                                }
                            }),
                            flexGrow: grow?.map(v => v ? 1 : 0),
                            gap: (spacing ?? Signal.of('md')).combine(styles, (sp, st) => {
                                return (typeof sp === 'number' ? sp : st.styles.spacing[sp]);
                            })
                        } }), _jsx(_Fragment, { children: children })] }));
        } }));
};
