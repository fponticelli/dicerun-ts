import { type JSX, Prop, type Signal } from '@tempots/dom';
import { type Size } from '../../styles/size';
import { type UIStyles } from '../../styles/ui-styles';
export interface Styles {
    components: UIComponentStyles;
    styles: UIStyles;
}
export interface UITheme {
    styles: Signal<Styles>;
    isLight: Prop<boolean>;
}
export interface StyleProviderProps {
    children?: JSX.Element;
}
export declare const StyleMarker: symbol;
export declare const StyleProvider: ({ children }: StyleProviderProps) => JSX.DOMNode;
export type ComponentClasses<T> = (options: T) => string;
export interface UIComponentStyles {
    button: {
        root: ComponentClasses<ButtonStyles>;
        content: ComponentClasses<ButtonStyles>;
    };
    control: {
        root: ComponentClasses<ControlStyles>;
    };
}
export type ButtonVariant = 'primary' | 'secondary' | 'tertiary' | 'danger';
export interface ButtonStyles {
    size: Size | number;
    compact: boolean;
    variant: ButtonVariant;
}
export interface ControlStyles {
    size: Size;
    spacing: Size;
}
export declare const defaultComponentStyle: ({ font, border, spacing, background, control }: UIStyles) => UIComponentStyles;
