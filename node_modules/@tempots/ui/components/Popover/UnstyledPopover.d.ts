import { type JSX, Signal, Prop } from '@tempots/dom';
export type Alignment = 'start' | 'end';
export type Side = 'top' | 'right' | 'bottom' | 'left';
export type AlignedPlacement = `${Side}-${Alignment}`;
export type Placement = Side | AlignedPlacement;
export interface UnstyledPopoverProps {
    children?: JSX.DOMNode;
    placement?: Signal<Placement>;
    shiftPadding?: Signal<number>;
    offset?: Signal<number>;
    arrow?: JSX.DOMNode;
    arrowOver?: boolean;
    arrowPadding?: Signal<number>;
    onTargetMount?: (el: HTMLElement, open: () => void, close: () => void) => () => void;
    opened?: Prop<boolean>;
}
export declare function onTargetOverMount(el: HTMLElement, open: () => void, close: () => void): () => void;
export declare function onTargetClickMount(el: HTMLElement, open: () => void, close: () => void): () => void;
export declare function UnstyledPopover({ children, placement: maybePlacement, shiftPadding: maybeShiftPadding, offset: maybeOffset, arrow: maybeArrow, arrowOver, arrowPadding: maybeArrowPadding, onTargetMount, opened: passedOpened }: UnstyledPopoverProps): JSX.DOMNode;
