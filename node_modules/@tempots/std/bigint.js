export function ceilDiv(x, y) {
    if (y < 0n) {
        x = -x;
        y = -y;
    }
    return x <= 0n ? x / y : (x - 1n) / y + 1n;
}
export function floorDiv(x, y) {
    if (y < 0n) {
        x = -x;
        y = -y;
    }
    return x >= 0n ? x / y : (x + 1n) / y - 1n;
}
export function compare(x, y) {
    return x < y ? -1 : x > y ? 1 : 0;
}
export function abs(x) {
    return x < 0n ? -x : x;
}
export function min(x, y) {
    return x < y ? x : y;
}
export function max(x, y) {
    return x > y ? x : y;
}
export function pow(x, y) {
    if (y < 0n)
        throw new Error('negative exponent');
    let result = 1n;
    while (y > 0n) {
        if ((y & 1n) !== 0n)
            result *= x;
        y >>= 1n;
        x *= x;
    }
    return result;
}
export function gcd(x, y) {
    x = abs(x);
    y = abs(y);
    while (y > 0n) {
        const t = y;
        y = x % y;
        x = t;
    }
    return x;
}
export function lcm(x, y) {
    return abs(x * y) / gcd(x, y);
}
export function isPrime(x) {
    if (x < 2n)
        return false;
    if (x === 2n || x === 3n)
        return true;
    if (x % 2n === 0n || x % 3n === 0n)
        return false;
    let i = 5n;
    while (i * i <= x) {
        if (x % i === 0n || x % (i + 2n) === 0n)
            return false;
        i += 6n;
    }
    return true;
}
export function nextPrime(x) {
    if (x < 2n)
        return 2n;
    if (x === 2n)
        return 3n;
    if (x % 2n === 0n)
        x++;
    else
        x += 2n;
    while (!isPrime(x))
        x += 2n;
    return x;
}
export function prevPrime(x) {
    if (x <= 2n)
        throw new Error('no previous prime');
    if (x === 3n)
        return 2n;
    if (x % 2n === 0n)
        x--;
    else
        x -= 2n;
    while (!isPrime(x))
        x -= 2n;
    return x;
}
export function isEven(x) {
    return x % 2n === 0n;
}
export function isOdd(x) {
    return x % 2n !== 0n;
}
export function isZero(x) {
    return x === 0n;
}
export function isOne(x) {
    return x === 1n;
}
export function isNegative(x) {
    return x < 0n;
}
export function isPositive(x) {
    return x > 0n;
}
