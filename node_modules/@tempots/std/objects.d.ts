import { type TupleToUnion } from './types/tuples';
import { type Merge } from './types/objects';
import { type AnyKey } from './types/utility';
export declare function keys<T extends object>(obj: T): Array<keyof T>;
export declare function sameKeys<T extends object>(a: T, b: T): boolean;
export declare function isObject(obj: unknown): obj is Record<AnyKey, unknown>;
export declare function removeFields<T extends object, F extends Array<keyof T>>(ob: T, ...fields: F): Omit<T, TupleToUnion<F>>;
export declare function merge<A extends Record<AnyKey, unknown>, B extends Record<AnyKey, unknown>>(a: A, b: B): Merge<A, B>;
export declare function isEmpty(obj: object): boolean;
