import { nearEquals } from '../numbers';
const TOLLERANCE = 0.0001;
export class LUV {
    static ofChannels([l, u, v]) {
        return new LUV(l, u, v);
    }
    l;
    u;
    v;
    /**
     *
     * @param l
     * @param u range (0, 1)
     * @param v range (0, 1)
     */
    constructor(l, u, v) {
        this.l = l;
        this.u = u;
        this.v = v;
    }
    withL(l) {
        return new LUV(l, this.u, this.v);
    }
    withU(u) {
        return new LUV(this.l, u, this.v);
    }
    withV(v) {
        return new LUV(this.l, this.u, v);
    }
    toChannels() {
        return [this.l, this.u, this.v];
    }
    toString() {
        return `luv(${this.l}, ${this.u}, ${this.v})`;
    }
    equals(other, tollerance = TOLLERANCE) {
        if ((nearEquals(this.l, other.l, tollerance) && nearEquals(this.l, 1, tollerance)) ||
            nearEquals(this.l, 0, tollerance)) {
            return true;
        }
        return (nearEquals(this.l, other.l, tollerance) &&
            nearEquals(this.u, other.u, tollerance) &&
            nearEquals(this.v, other.v, tollerance));
    }
}
