import { nearEquals } from '../numbers';
const TOLLERANCE = 0.0001;
export class XYZ {
    static ofChannels([x, y, z]) {
        return new XYZ(x, y, z);
    }
    x;
    y;
    z;
    /**
     *
     * @param x
     * @param y 100 is the brightest white
     * @param z
     */
    constructor(x, y, z) {
        this.x = x;
        this.y = y;
        this.z = z;
    }
    withX(x) {
        return new XYZ(x, this.y, this.z);
    }
    withY(y) {
        return new XYZ(this.x, y, this.z);
    }
    withZ(z) {
        return new XYZ(this.x, this.y, z);
    }
    toString() {
        return `XYZ(${this.x}, ${this.y}, ${this.z})`;
    }
    toChannels() {
        return [this.x, this.y, this.z];
    }
    equals(other, tollerance = TOLLERANCE) {
        return (nearEquals(this.x, other.x, tollerance) &&
            nearEquals(this.y, other.y, tollerance) &&
            nearEquals(this.z, other.z, tollerance));
    }
}
