import { type Signal } from '../prop';
import { type Renderable } from '../renderable';
import { type Clear } from '../clean';
import { type DOMContext } from '../dom-context';
export declare class PropertyImpl<T> implements Renderable {
    private readonly name;
    private readonly value;
    constructor(name: string, value: Signal<T>);
    readonly appendTo: (ctx: DOMContext) => Clear;
}
export interface PropertyProps<T> {
    name: string;
    value: Signal<T>;
}
export declare function Property<T>({ name, value }: PropertyProps<T>): Renderable;
