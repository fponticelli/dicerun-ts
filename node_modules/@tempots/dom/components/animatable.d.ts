export interface Animatable {
    width?: number;
    maxWidth?: number;
    minWidth?: number;
    height?: number;
    maxHeight?: number;
    minHeight?: number;
    lineHeight?: number;
    opacity?: number;
    top?: number;
    left?: number;
    right?: number;
    bottom?: number;
    padding?: number;
    paddingTop?: number;
    paddingBottom?: number;
    paddingLeft?: number;
    paddingRight?: number;
    margin?: number;
    marginTop?: number;
    marginBottom?: number;
    marginLeft?: number;
    marginRight?: number;
    fontSize?: number;
    letterSpacing?: number;
    borderWidth?: number;
    borderRadius?: number;
    translateX?: number;
    translateY?: number;
    translateZ?: number;
    rotateX?: number;
    rotateY?: number;
    rotateZ?: number;
    scaleX?: number;
    scaleY?: number;
    scaleZ?: number;
    skewX?: number;
    skewY?: number;
    grayScale?: number;
    sepia?: number;
    saturate?: number;
    hueRotate?: number;
    invert?: number;
    brightness?: number;
    contrast?: number;
    blur?: number;
}
export declare function getComputedAnimatableProp(styles: CSSStyleDeclaration, key: keyof Animatable): Animatable[typeof key];
export declare function getComputedAnimatable(el: HTMLElement, styles: Animatable): Animatable;
export declare function applyAnimatableProp(el: HTMLElement, key: keyof Animatable, value: Animatable[typeof key]): void;
export declare function applyInterpolatedAnimatableProp(el: HTMLElement, key: keyof Animatable, from: Animatable[typeof key], to: Animatable[typeof key], progress: number): void;
export declare function applyInterpolatedAnimatable(el: HTMLElement, from: Animatable, to: Animatable, progress: number): void;
export declare function applyAnimatable(el: HTMLElement, styles: Animatable): void;
