/** @jsxImportSource .. */
import { type Renderable } from '../types/renderable';
import { type Clear } from '../types/clean';
import { type DOMContext } from '../dom-context';
export interface Animatable {
    width?: number;
    maxWidth?: number;
    minWidth?: number;
    height?: number;
    maxHeight?: number;
    minHeight?: number;
    lineHeight?: number;
    opacity?: number;
    top?: number;
    left?: number;
    right?: number;
    bottom?: number;
    padding?: number;
    paddingTop?: number;
    paddingBottom?: number;
    paddingLeft?: number;
    paddingRight?: number;
    margin?: number;
    marginTop?: number;
    marginBottom?: number;
    marginLeft?: number;
    marginRight?: number;
    fontSize?: number;
    letterSpacing?: number;
    borderWidth?: number;
    borderRadius?: number;
    translateX?: number;
    translateY?: number;
    translateZ?: number;
    rotateX?: number;
    rotateY?: number;
    rotateZ?: number;
    scaleX?: number;
    scaleY?: number;
    scaleZ?: number;
    skewX?: number;
    skewY?: number;
    grayScale?: number;
    sepia?: number;
    saturate?: number;
    hueRotate?: number;
    invert?: number;
    brightness?: number;
    contrast?: number;
    blur?: number;
}
export interface TweenAnimation {
    style: Animatable;
    duration?: number;
    delay?: number;
}
export interface TweenProps {
    enter?: TweenAnimation[];
    exit?: TweenAnimation[];
    style?: Animatable;
}
export declare function getComputedStyleValue(styles: CSSStyleDeclaration, key: keyof Animatable): Animatable[typeof key];
export declare function getCurrentStyleValues(el: HTMLElement, styles: Animatable): Animatable;
export declare function applyStyle(el: HTMLElement, key: keyof Animatable, value: Animatable[typeof key]): void;
export declare function applyInterpolatedStyle(el: HTMLElement, key: keyof Animatable, from: Animatable[typeof key], to: Animatable[typeof key], progress: number): void;
export declare function applyInterpolatedStyles(el: HTMLElement, from: Animatable, to: Animatable, progress: number): void;
export declare function applyStyles(el: HTMLElement, styles: Animatable): void;
export declare class TweenImpl implements Renderable {
    private readonly enter;
    private readonly exit;
    private readonly style?;
    constructor(enter?: TweenAnimation[], exit?: TweenAnimation[], style?: Animatable | undefined);
    appendTo(ctx: DOMContext): Clear;
}
export declare function Tween({ enter, exit, style }: TweenProps): TweenImpl;
