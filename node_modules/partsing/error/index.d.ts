import { Entity } from './entity';
import { CustomError } from './custom_error';
import { ExpectedAnyOf } from './expected_any_of';
import { ExpectedAtLeast } from './expected_at_least';
import { ExpectedEoi } from './expected_eoi';
import { ExpectedField } from './expected_field';
import { ExpectedMatch } from './expected_match';
import { ExpectedNoneOf } from './expected_none_of';
import { ExpectedOnce } from './expected_once';
import { ExpectedWithinRange } from './expected_within_range';
import { PatternMismatch } from './pattern_mismatch';
import { UnexpectedEoi } from './unexpected_eoi';
/**
 * Union type of all possible decoding errors.
 */
export declare type DecodeError = CustomError | ExpectedAnyOf | ExpectedAtLeast | ExpectedEoi | ExpectedField | ExpectedMatch | ExpectedNoneOf | ExpectedOnce | ExpectedWithinRange | PatternMismatch | UnexpectedEoi;
/**
 * Static object that contains utility functions to generate any of the existing
 * decoding errors typed as `DecodeError` instances.
 */
export declare const DecodeError: {
    /**
     * Generate an instance of `{@link CustomError}`.
     */
    custom: (value: string) => DecodeError;
    /**
     * Generate an instance of `{@link ExpectedAnyOf}`.
     */
    expectedAnyOf: (entity: Entity, values: string[]) => DecodeError;
    /**
     * Generate an instance of `{@link ExpectedAtLeast}`.
     */
    expectedAtLeast: (min: number, entity: Entity) => DecodeError;
    /**
     * Generate an instance of `{@link CustomError}`.
     */
    expectedEoi: DecodeError;
    /**
     * Generate an instance of `{@link ExpectedField}`.
     */
    expectedField: (field: string) => DecodeError;
    /**
     * Generate an instance of `{@link ExpectedMatch}`.
     */
    expectedMatch: (entity: Entity, value: string) => DecodeError;
    /**
     * Generate an instance of `{@link ExpectedNoneOf}`.
     */
    expectedNoneOf: (entity: Entity, values: string[]) => DecodeError;
    /**
     * Generate an instance of `{@link ExpectedOnce}`.
     */
    expectedOnce: (entity: Entity) => DecodeError;
    /**
     * Generate an instance of `{@link ExpectedWithinRange}`.
     */
    expectedWithinRange: (min: string, max: string) => DecodeError;
    /**
     * Generate an instance of `{@link PatternMismatch}`.
     */
    patternMismatch: (pattern: string) => DecodeError;
    /**
     * Generate an instance of `{@link UnexpectedEoi}`.
     */
    unexpectedEoi: DecodeError;
};
export { Entity, entityToString } from './entity';
export { CustomError } from './custom_error';
export { ExpectedAnyOf } from './expected_any_of';
export { ExpectedAtLeast } from './expected_at_least';
export { ExpectedEoi } from './expected_eoi';
export { ExpectedField } from './expected_field';
export { ExpectedMatch } from './expected_match';
export { ExpectedNoneOf } from './expected_none_of';
export { ExpectedOnce } from './expected_once';
export { ExpectedWithinRange } from './expected_within_range';
export { PatternMismatch } from './pattern_mismatch';
export { UnexpectedEoi } from './unexpected_eoi';
