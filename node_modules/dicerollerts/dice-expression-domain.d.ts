import { DiceReducer, type DiceExpression, type DiceFunctor, type DiceReduceable, type Range, type Sides, type Times, type ValidationMessage, type DiceFilter } from './dice-expression';
export declare const DE: {
    toString(expr: DiceExpression): string;
    diceToString(times: number, sides: number): string;
    diceBagToString(dice: Sides[], functor: DiceFunctor): string;
    sidesToString(dice: Sides[]): string;
    timesToString(times: Times): string;
    rangeToString(range: Range): string;
    expressionsToString(exprs: DiceExpression[]): string;
    allOneDieSameSides(exprs: DiceExpression[]): boolean;
    expressionExtractorToString(reducer: DiceReducer): string;
    diceFilterToString(filter: DiceFilter): string;
    needsBraces(expr: DiceExpression): boolean;
    calculateBasicRollsReduceable(dr: DiceReduceable): number;
    calculateBasicRolls(expr: DiceExpression): number;
    validateExpr(expr: DiceExpression): ValidationMessage[];
    validateDiceReduceable(dr: DiceReduceable): ValidationMessage[];
    alwaysInRange(sides: number, range: Range): boolean;
    checkFunctor(sides: number, df: DiceFunctor): ValidationMessage[];
    validate(expr: DiceExpression): null | ValidationMessage[];
};
